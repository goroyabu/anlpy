# /// @file CMakeLists.txt
# /// @detail Automatically generated by make_anlpy_project.sh 1.0.0
# ----- PROJECT NAME & VERSION ----- #
project(ccana CXX)
set(USER_ANL_LIB_NAME ${PROJECT_NAME}c)
set(
    MODULE_CXX_LIST
    source/Extract2Photon.cpp source/ProjectCone3D.cpp
    source/Project2Photon3D.cpp source/IterateCone3D.cpp
    source/Iterate2Photon3D.cpp source/PETimager.cpp
    source/ProjectConeETCC.cpp source/FilterComptree.cpp
)

# ----- CMake & Compiler ----- #
cmake_minimum_required(VERSION 3.16)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)
set(CMAKE_CXX_FLAGS "-std=c++1z -Wall -O3 -pthread")

# ----- Pybind11 ----- #
find_package(pybind11 REQUIRED)
set(PYBIND11_CPP_STANDARD "-std=c++1z")

# ----- ROOT ----- #
find_package(ROOT)

# ----- ANLpy ----- #
find_package(bnk)
find_package(evs)
find_package(com_cli)
find_package(anl)

# ----- Build & Install ----- #
add_library(${USER_ANL_LIB_NAME} STATIC ${MODULE_CXX_LIST})
target_link_libraries(${USER_ANL_LIB_NAME} PRIVATE anl ${ROOT_LIBRARIES})
target_include_directories(${USER_ANL_LIB_NAME} PUBLIC ${ROOT_INCLUDE_DIRS})

# ----- Build Python Package ----- #
pybind11_add_module(${PROJECT_NAME} source/pyfunc.cpp)
target_link_libraries(${PROJECT_NAME} PRIVATE ${USER_ANL_LIB_NAME} anl ${ROOT_LIBRARIES})
install(TARGETS ${PROJECT_NAME} EXPORT ${PROJECT_NAME}-config DESTINATION lib)
install(EXPORT ${PROJECT_NAME}-config DESTINATION lib/${PROJECT_NAME} EXPORT_LINK_INTERFACE_LIBRARIES)

add_executable(extract_2photon source/extract.cpp)
target_link_libraries(extract_2photon PRIVATE ${USER_ANL_LIB_NAME} anl ${ROOT_LIBRARIES})
install(TARGETS extract_2photon DESTINATION bin)

add_executable(iterate_mlem source/iterate.cpp)
target_link_libraries(iterate_mlem PRIVATE ${USER_ANL_LIB_NAME} anl ${ROOT_LIBRARIES})
install(TARGETS iterate_mlem DESTINATION bin)

# ----- Uninstallation ----- #
configure_file(cmake_uninstall.cmake.in cmake_uninstall.cmake IMMEDIATE @ONLY)
add_custom_target(uninstall COMMAND "${CMAKE_COMMAND}" -P cmake_uninstall.cmake)
